% matlab -nodesktop -nosplash -nosoftwareopengl < sprinkler.mat

% false = 1; true = 2


% En  el  ejemplo “Sprinkler”,  repetir  los  procesos  de  aprendizaje  a  partir  de  datos completos y de datos incompletos explicados en la Sec.2.3, usando un numero mucho mayor de muestras de aprendizaje (por ejemplo,
% nMuestras = 1000), ası como permitiendo un mayor número de iteraciones. Comentar los resultados obtenidos.

addpath('~/asigDSIC/ETSINF/apr/p2/BNT')
addpath(genpathKPM('~/asigDSIC/ETSINF/apr/p2/BNT'))

% crear red
N = 4;  C = 1; S = 2; R = 3; W = 4;
grafo          = zeros(N, N);
grafo(C,[R S]) = 1;
grafo(R,W)     = 1;
grafo(S,W)     = 1;

nodosDiscretos = 1:N;
tallaNodos     = 2*ones(1,N); % cada nodo puede tomar dos valores: false (1) o true(2)

redB = mk_bnet(grafo, tallaNodos, 'discrete', nodosDiscretos);

redB.CPD{W} = tabular_CPD(redB, W, [1.0 0.1 0.1 0.01 0.0 0.9 0.9 0.99]);
redB.CPD{C} = tabular_CPD(redB, C, [0.5 0.5]);
redB.CPD{S} = tabular_CPD(redB, S, [0.5 0.9 0.5 0.1]);
redB.CPD{R} = tabular_CPD(redB, R, [0.8 0.2 0.2 0.8]);

% inferencia
motor = jtree_inf_engine(redB);
evidencia = cell(1,N);
%evidencia{C} = 1; % cloudy = false
%
%[explMasProb, logVer] = calc_mpe(motor, evidencia);
%explMasProb
%logVer
%
%[motor, logVerosim] = enter_evidence(motor, evidencia);
%m = marginal_nodes(motor,C,1);
%m.T

% 2.3
% generar datos completos
semilla = 0; 
rng(semilla);
nMuestras = 1000;
muestras = cell(N, nMuestras);
for i=1:nMuestras muestras(:,i) = sample_bnet(redB); end

% estimar las probabilidades de otra red con la misma estructura que redB
redAPR        = mk_bnet(grafo, tallaNodos);
redAPR.CPD{C} = tabular_CPD(redAPR, C);
redAPR.CPD{R} = tabular_CPD(redAPR, R);
redAPR.CPD{S} = tabular_CPD(redAPR, S);
redAPR.CPD{W} = tabular_CPD(redAPR, W);

redAPR2=learn_params(redAPR, muestras);

% mostrar las probabilidades estimadas para comparar con la red original
TPCaux = cell(1,N);
for i=1:N s=struct(redAPR2.CPD{i}); TPCaux{i}=s.CPT; end
dispcpt(TPCaux{C})
dispcpt(TPCaux{S})
dispcpt(TPCaux{R})
dispcpt(TPCaux{W})

% datos incompletos
muestrasS = muestras;
semilla = 0; rng(semilla);
ocultas   = rand(N, nMuestras) > 0.5;
[I,J]     = find(ocultas);
for k=1:length(I) muestrasS{I(k), J(k)} = []; end

% nueva red
redEM = mk_bnet(grafo, tallaNodos, 'discrete', nodosDiscretos);
redEM.CPD{C} = tabular_CPD(redEM, C);
redEM.CPD{R} = tabular_CPD(redEM, R);
redEM.CPD{S} = tabular_CPD(redEM, S);
redEM.CPD{W} = tabular_CPD(redEM, W);
motorEM      = jtree_inf_engine(redEM);

% aprendizaje por EM
maxIter = 1000; eps = 1e-4;
semilla = 0; rng(semilla);
[redEM2] = learn_params_em(motorEM, muestrasS, maxIter, eps);
auxTPC = cell(1,N);
for i=1:N s=struct(redEM2.CPD{i}); auxTPC{i}=s.CPT; end

dispcpt(auxTPC{S});
dispcpt(auxTPC{W});
dispcpt(auxTPC{R});
dispcpt(auxTPC{C});
