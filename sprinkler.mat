// matlab -nodesktop -nosplash -nosoftwareopengl < sprinkler.mat

// false = 1; true = 2

/*
En  el  ejemplo “Sprinkler”,  repetir  los  procesos  de  aprendizaje  a  partir  de  datos completos y de datos incompletos explicados en la Sec.2.3, usando un numero mucho mayor de muestras de aprendizaje (por ejemplo,
nMuestras = 1000), ası como permitiendo un mayor número de iteraciones. Comentar los resultados obtenidos.
*/
addpath('~/asigDSIC/ETSINF/apr/p2/BNT')
addpath(genpathKPM('~/asigDSIC/ETSINF/apr/p2/BNT'))

N = 4;  C = 1; S = 2; R = 3; W = 4;
grafo          = zeros(N, N);
grafo(C,[R S]) = 1;
grafo(R,W)     = 1;
grafo(S,W)     = 1;

nodosDiscretos = 1:N;
tallaNodos     = 2*ones(1,N);

redB = mk_bnet(grafo, tallaNodos, 'discrete', nodosDiscretos);

redB.CPD{W} = tabular_CPD(redB, W, [1.0 0.1 0.1 0.01 0.0 0.9 0.9 0.99]);
redB.CPD{C} = tabular_CPD(redB, C, [0.5 0.5]);
redB.CPD{S} = tabular_CPD(redB, S, [0.5 0.9 0.5 0.1]);
redB.CPD{R} = tabular_CPD(redB, R, [0.8 0.2 0.2 0.8]);

// 2.3
semilla = 0; rng(semilla);
nMuestras = 1000;
muestras = cell(N, nMuestras);
for i=1:nMuestras muestras(:,i) = sample_bnet(redB); end

redAPR        = mk_bnet(grafo, tallaNodos);
redAPR.CPD{C} = tabular_CPD(redAPR, C);
redAPR.CPD{R} = tabular_CPD(redAPR, R);
redAPR.CPD{S} = tabular_CPD(redAPR, S);
redAPR.CPD{W} = tabular_CPD(redAPR, W);
